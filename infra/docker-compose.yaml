version: '3.7'


services:

  backend:
    container_name: backend
    build:
      context: ../backend
      dockerfile: ../backend/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
    volumes:
      - ../backend/src:/app/src
    env_file:
      - .env
    restart: always
    networks:
      - app-network


  db:
    container_name: db
    image: postgres:15.6-bullseye
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus_data/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - ./grafana_data:/var/lib/grafana
    networks:
      - app-network


  frontend:
    container_name: frontend
    build:
      context: ../frontend
      dockerfile: ../frontend/Dockerfile
    ports:
      - "3000:80"
    volumes:
      - ../frontend/app:/app
      - /app/node_modules
      - ../frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    environment:
      - CHOKIDAR_USEPOLLING=true
    restart: always

volumes:
  postgres_data:
  prometheus_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./prometheus_data
  grafana_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /Users/aleksejevdokimov/Desktop/itmo/board_tracker/infra/grafana_data


networks:
  app-network:
    driver: bridge
